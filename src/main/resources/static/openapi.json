{
  "openapi": "3.0.1",
  "info": {
    "title": "Aluraflix",
    "version": "v1",
    "description": "API criada para o Challenge Alura Back-End"
  },
  "servers": [
    {
      "url": "https://lr-aluraflix.herokuapp.com"
    }
  ],
  "paths": {
    "/api/videos/{id}": {
      "get": {
        "description": "Get Video By ID",
        "security": [{
          "BearerUserAuth": []  
        }],
        "tags": [
          "video-controller"
        ],
        "operationId": "getVideoById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VideoResponse"
                }
              }
            }
          },
          "400": {
            "description": "Error: Bad Request",
            "content": {
               "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MessageResponseNotFound"
                }
              }
            }
          },
          "401": {
            "description": "Error: Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MessageResponseUnauthorized"
                }
              }
            }
          }
        }
      },
      "put": {
        "description": "Update Video By ID",
        "security": [{
          "BearerUserAuth": []  
        }],
        "tags": [
          "video-controller"
        ],
        "operationId": "updateVideo",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/VideoRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VideoResponse"
                }
              }
            }
          },
          "400": {
            "description": "Error: Bad Request",
            "content": {
               "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MessageResponseNotFound"
                }
              }
            }
          },
          "401": {
            "description": "Error: Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MessageResponseUnauthorized"
                }
              }
            }
          }
        }
      },
      "delete": {
        "description": "Delete Video By ID",
        "security": [{
          "BearerUserAuth": []  
        }],
        "tags": [
          "video-controller"
        ],
        "operationId": "deleteVideo",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref":  "#/components/schemas/MessageResponseSuccess"
                }
              }
            }
          },
          "400": {
            "description": "Error: Bad Request",
            "content": {
               "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MessageResponseNotFound"
                }
              }
            }
          },
          "401": {
            "description": "Error: Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MessageResponseUnauthorized"
                }
              }
            }
          }
        }
      }
    },
    "/api/categories/{id}": {
      "get": {
        "description": "Get Category By ID",
        "security": [{
          "BearerUserAuth": []  
        }],
        "tags": [
          "category-controller"
        ],
        "operationId": "getCategoryById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CategoryResponse"
                }
              }
            }
          },
          "400": {
            "description": "Error: Bad Request",
            "content": {
               "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MessageResponseNotFound"
                }
              }
            }
          },
          "401": {
            "description": "Error: Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MessageResponseUnauthorized"
                }
              }
            }
          }
        }
      },
      "put": {
        "description": "Update Category By ID",
        "security": [{
          "BearerUserAuth": []  
        }],
        "tags": [
          "category-controller"
        ],
        "operationId": "updateCategory",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CategoryRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CategoryResponse"
                }
              }
            }
          },
          "400": {
            "description": "Error: Bad Request",
            "content": {
               "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MessageResponseNotFound"
                }
              }
            }
          },
          "401": {
            "description": "Error: Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MessageResponseUnauthorized"
                }
              }
            }
          }
        }
      },
      "delete": {
        "description": "Delete Category By ID",
        "security": [{
          "BearerUserAuth": []  
        }],
        "tags": [
          "category-controller"
        ],
        "operationId": "deleteCategory",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref":  "#/components/schemas/MessageResponseSuccess"
                }
              }
            }
          },
          "400": {
            "description": "Error: Bad Request",
            "content": {
               "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MessageResponseNotFound"
                }
              }
            }
          },
          "401": {
            "description": "Error: Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MessageResponseUnauthorized"
                }
              }
            }
          }
        }
      }
    },
    "/start/signup": {
      "post": {
        "description": "Register New User",
        "tags": [
          "public-controller"
        ],
        "operationId": "registerUser",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SignupRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref":  "#/components/schemas/MessageResponseSuccess"
                }
              }
            }
          }
        }
      }
    },
    "/start/signin": {
      "post": {
        "description": "Login User",
        "tags": [
          "public-controller"
        ],
        "operationId": "authenticateUser",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoginResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/videos": {
      "get": {
        "description": "Get All Videos or Search For a Video",
        "security": [{
          "BearerUserAuth": []  
        }],
        "tags": [
          "video-controller"
        ],
        "operationId": "getVideos",
        "parameters": [
          {
            "name": "search",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/VideoResponse"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Error: Bad Request",
            "content": {
               "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MessageResponseNotFound"
                }
              }
            }
          },
          "401": {
            "description": "Error: Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MessageResponseUnauthorized"
                }
              }
            }
          }
        }
      },
      "post": {
        "description": "Insert New Video",
        "security": [{
          "BearerUserAuth": []  
        }],
        "tags": [
          "video-controller"
        ],
        "operationId": "insertVideo",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/VideoRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VideoResponse"
                }
              }
            }
          },
          "401": {
            "description": "Error: Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MessageResponseUnauthorized"
                }
              }
            }
          }
        }
      }
    },
    "/api/categories": {
      "get": {
        "description": "Get All Categories",
        "security": [{
          "BearerUserAuth": []  
        }],
        "tags": [
          "category-controller"
        ],
        "operationId": "getCategories",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CategoryResponse"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Error: Bad Request",
            "content": {
               "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MessageResponseNotFound"
                }
              }
            }
          },
          "401": {
            "description": "Error: Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MessageResponseUnauthorized"
                }
              }
            }
          }
        }
      },
      "post": {
        "description": "Insert New Category",
        "security": [{
          "BearerUserAuth": []  
        }],
        "tags": [
          "category-controller"
        ],
        "operationId": "insertCategory",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CategoryRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CategoryResponse"
                }
              }
            }
          },
          "401": {
            "description": "Error: Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MessageResponseUnauthorized"
                }
              }
            }
          }
        }
      }
    },
    "/api/admin/signup": {
      "post": {
        "description": "Register New Administrator User",
        "security": [{
          "BearerAdminAuth": []  
        }],
        "tags": [
          "admin-controller"
        ],
        "operationId": "registerUserAdmin",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SignupRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref":  "#/components/schemas/MessageResponseSuccess"
                }
              }
            }
          },
          "401": {
            "description": "Error: Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MessageResponseUnauthorized"
                }
              }
            }
          }
        }
      }
    },
    "/start/free": {
      "get": {
        "description": "Get All Free Videos",
        "tags": [
          "public-controller"
        ],
        "operationId": "getFreeVideos",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/VideoResponse" 
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/categories/{categoryId}/videos": {
      "get": {
        "description": "Get All Videos By Category",
        "security": [{
          "BearerUserAuth": []  
        }],
        "tags": [
          "category-controller"
        ],
        "operationId": "getVideosByCategory",
        "parameters": [
          {
            "name": "categoryId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "page",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref":  "#/components/schemas/VideoResponse"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Error: Bad Request",
            "content": {
               "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MessageResponseNotFound"
                }
              }
            }
          },
          "401": {
            "description": "Error: Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MessageResponseUnauthorized"
                }
              }
            }
          }
        }
      }
    },
    "/api/admin/users": {
      "get": {
        "description": "Get All Users",
        "security": [{
          "BearerAdminAuth": []  
        }],
        "tags": [
          "admin-controller"
        ],
        "operationId": "getUsers",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref":  "#/components/schemas/UserResponse"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Error: Bad Request",
            "content": {
               "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MessageResponseNotFound"
                }
              }
            }
          },
          "401": {
            "description": "Error: Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MessageResponseUnauthorized"
                }
              }
            }
          }
        }
      }
    },
    "/api/admin/users/{username}": {
      "get": {
        "description": "Get User By Username",
        "security": [{
          "BearerAdminAuth": []  
        }],
        "tags": [
          "admin-controller"
        ],
        "operationId": "getUserByUsername",
        "parameters": [
          {
            "name": "username",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserResponse"
                }
              }
            }
          },
          "400": {
            "description": "Error: Bad Request",
            "content": {
               "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MessageResponseNotFound"
                }
              }
            }
          },
          "401": {
            "description": "Error: Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MessageResponseUnauthorized"
                }
              }
            }
          }
        }
      },
      "delete": {
        "description": "Delete User By Username",
        "security": [{
          "BearerAdminAuth": []  
        }],
        "tags": [
          "admin-controller"
        ],
        "operationId": "deleteUser",
        "parameters": [
          {
            "name": "username",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref":  "#/components/schemas/MessageResponseSuccess"
                }
              }
            }
          },
          "400": {
            "description": "Error: Bad Request",
            "content": {
               "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MessageResponseNotFound"
                }
              }
            }
          },
          "401": {
            "description": "Error: Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MessageResponseUnauthorized"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "BearerUserAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      },
      "BearerAdminAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    },
    "schemas": {
      "VideoRequest": {
        "required": [
          "description",
          "link",
          "title"
        ],
        "type": "object",
        "properties": {
          "title": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string",
            "example": "Spring Boot acelere o desenvolvimento de microsserviços"
          },
          "description": {
            "maxLength": 500,
            "minLength": 0,
            "type": "string",
            "example": "Vamos bater um papo sobre Spring Boot? O Fernando Boaglio, autor do livro, vai contar um pouco sobre sua experiência na área, projeto desenvolvido no livro e os pré-requisitos para uma boa leitura."
          },
          "link": {
            "type": "string",
            "example": "https://www.youtube.com/watch?v=TX1NztPbvMw"
          },
          "categoryId": {
            "type": "integer",
            "format": "int32",
            "example": 2
          }
        }
      },
      "VideoResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "title": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string"
          },
          "description": {
            "maxLength": 500,
            "minLength": 0,
            "type": "string"
          },
          "link": {
            "type": "string"
          },
          "categoryId": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "CategoryRequest": {
        "required": [
          "color",
          "title"
        ],
        "type": "object",
        "properties": {
          "title": {
            "maxLength": 20,
            "minLength": 0,
            "type": "string",
            "example": "Alura"
          },
          "color": {
            "maxLength": 20,
            "minLength": 0,
            "type": "string",
            "example": "yellow"
          }
        }
      },
      "CategoryResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "title": {
            "maxLength": 20,
            "minLength": 0,
            "type": "string"
          },
          "color": {
            "maxLength": 20,
            "minLength": 0,
            "type": "string"
          }
        }
      },
      "UserResponse": {
        "type": "object",
        "properties": {
          "username": {
            "type": "string"
          },
          "roles": {
            "type": "string"
          }
        }
      },
      "SignupRequest": {
        "required": [
          "email",
          "password",
          "username"
        ],
        "type": "object",
        "properties": {
          "username": {
            "maxLength": 20,
            "minLength": 3,
            "type": "string",
            "example": "TheFlash"
          },
          "email": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string",
            "example": "theflash@email.com"
          },
          "password": {
            "maxLength": 40,
            "minLength": 6,
            "type": "string",
            "example": "123456789"
          }
        }
      },
      "LoginRequest": {
        "required": [
          "password",
          "username"
        ],
        "type": "object",
        "properties": {
          "username": {
            "type": "string",
            "example": "TheFlash"
          },
          "password": {
            "type": "string",
            "example": "123456789"
          }
        }
      },
      "LoginResponse":{
        "type": "object",
        "properties": {
          "token": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "username": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "roles": {
            "type": "string"
          }
        }
      },
      "MessageResponseSuccess": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "example": "Successfully!"
          }
        }
      },
      "MessageResponseNotFound": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "example": "{resource} not found"
          }
        }
      },
      "MessageResponseUnauthorized": {
        "type": "object",
        "properties": {
          "timestamp": {
            "type": "string",
            "example": "2021-10-08T16:51:45.636+00:00"
          },
          "status": {
            "type": "integer",
            "format": "int32",
            "example": 401
          },
          "error": {
            "type": "string",
            "example": "Unauthorized"
          },
          "path": {
            "type": "string",
            "example": "/api/videos/1"
          }
        }
      }
    }
  }
}